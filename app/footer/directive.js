// Generated by CoffeeScript 1.9.2
(function() {
  myAppDirectives.directive('footer', [
    '$log', 'dataCache', function($log, dataCache) {
      return {
        restrict: 'A',
        replace: true,
        transclude: true,
        templateUrl: './templates/directive/footer.tpl.html',
        scope: {
          config: '='
        },
        link: function(scope, element, attrs) {
          var btnObj, config, guid, i, j, len, ref;
          config = scope.config;
          scope.btnList = config.btnList;
          scope.btnNum = scope.btnList.length;
          scope.active = 0;
          scope.isMaskShow = false;
          scope.contentType = '';
          guid = '';
          ref = scope.btnList;
          for (i = j = 0, len = ref.length; j < len; i = ++j) {
            btnObj = ref[i];
            btnObj.active = i;
            btnObj.guid = Mock.Random.guid();
          }
          scope.btnClickEventHandler = function(btnObj) {
            var contentObj, k, len1, ref1;
            scope.contentType = btnObj.type;
            guid = btnObj.guid;
            switch (scope.contentType) {
              case 'single':
                scope.singleItemActive = dataCache.get('singleItemActive' + guid) || 0;
                scope.contents = btnObj.content;
                break;
              case 'double':
                scope.doubleItemActive = dataCache.get('doubleItemActive' + guid) || 0;
                scope.contents = btnObj.content.list;
                break;
              default:
                break;
            }
            ref1 = scope.contents;
            for (i = k = 0, len1 = ref1.length; k < len1; i = ++k) {
              contentObj = ref1[i];
              contentObj.active = i;
            }
            if (scope.active === btnObj.active) {
              scope.isMaskShow = !scope.isMaskShow;
            } else {
              scope.isMaskShow = true;
            }
            scope.active = btnObj.active;
          };
          scope.maskClickEventHandler = function() {
            scope.isMaskShow = false;
          };
          scope.singleTypeClickEventHandler = function(contentObj, e) {
            e.stopPropagation();
            scope.singleItemActive = contentObj.active;
            dataCache.put('singleItemActive' + guid, contentObj.active);
          };
          scope.doubleTypeLeftListClickEventHandler = function(contentObj, e) {
            e.stopPropagation();
            scope.doubleItemActive = contentObj.active;
            dataCache.put('doubleItemActive' + guid, contentObj.active);
          };
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=directive.js.map
